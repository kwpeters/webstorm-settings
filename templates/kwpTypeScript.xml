<templateSet group="kwpTypeScript">
  <template name="import" value="import {$END$} from &quot;$file$&quot;;" description="import" toReformat="false" toShortenFQNames="true">
    <variable name="file" expression="" defaultValue="&quot;file&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="es6promise" value="new Promise&lt;$resolveType$&gt;((resolve: (result: $resolveType$) =&gt; void, reject: (err: $errorType$) =&gt; void) =&gt; {&#10;    $END$&#10;})" description="" toReformat="false" toShortenFQNames="true">
    <variable name="resolveType" expression="" defaultValue="&quot;ResolveType&quot;" alwaysStopAt="true" />
    <variable name="errorType" expression="" defaultValue="&quot;Error&quot;" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="curl" value="{$END$&#10;}" description="insert curly braces" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="if" value="if ($END$) {&#10;}" description="if conditional" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="arrow" value="($params$) =&gt; {$END$}" description="arrow function in TypeScript" toReformat="false" toShortenFQNames="true">
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="iface" value="interface I$name$ {&#10;    $END$&#10;}" description="interface" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;DarkBrownObject&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="it" value="$x$it(&quot;$description$&quot;, ($done$) =&gt; {$END$&#10;});" description="Jasmine it()" toReformat="false" toShortenFQNames="true">
    <variable name="x" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="description" expression="" defaultValue="&quot;description&quot;" alwaysStopAt="true" />
    <variable name="done" expression="" defaultValue="&quot;done&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="try" value="try {$END$&#10;}&#10;catch (err) {&#10;}" description="try/catch" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="method" value="$access$ $static$$methodname$($params$): $returntype$&#10;{$END$&#10;}" description="Add a new method" toReformat="false" toShortenFQNames="true">
    <variable name="access" expression="" defaultValue="&quot;public&quot;" alwaysStopAt="true" />
    <variable name="static" expression="" defaultValue="&quot;static &quot;" alwaysStopAt="true" />
    <variable name="methodname" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="params" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="returntype" expression="" defaultValue="&quot;Promise&lt;boolean&gt;&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="member" value="private _$name$: $type$;$END$" description="Add a class data member" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="&quot;name&quot;" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="&quot;type&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="desc" value="$x$describe(&quot;$description$&quot;, () =&gt; {$END$});" description="Jasmine describe" toReformat="false" toShortenFQNames="true">
    <variable name="x" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <variable name="description" expression="" defaultValue="&quot;description&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="for" value="for (let $curIndex$ = 0; $curIndex$ &lt; $container$.length; ++$curIndex$) {&#10;}" description="TS for loop" toReformat="false" toShortenFQNames="true">
    <variable name="curIndex" expression="" defaultValue="&quot;curIndex&quot;" alwaysStopAt="true" />
    <variable name="container" expression="" defaultValue="&quot;container&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="fts" value="function $name$($params$): $retType$&#10;{$END$&#10;}$term$" description="TypeScript function" toReformat="false" toShortenFQNames="true">
    <variable name="term" expression="" defaultValue="&quot;;&quot;" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="&quot;funcName&quot;" alwaysStopAt="true" />
    <variable name="retType" expression="" defaultValue="&quot;retType&quot;" alwaysStopAt="true" />
    <variable name="params" expression="" defaultValue="&quot;param1, param2&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="cdump" value="console.log(`\n\n$varName$: ${JSON.stringify($varName$, undefined, 4)}\n\n`);$END$&#10;" description="console.log a variable's value" toReformat="false" toShortenFQNames="true">
    <variable name="varName" expression="" defaultValue="&quot;variable&quot;" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>